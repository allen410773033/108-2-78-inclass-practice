library(googlesheets4)
`出席狀況表單網址` <-  # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
library(googlesheets4)
`https://drive.google.com/open?id=1oB-5hj1pO5g8FMpZbA7RgIG8NvCRx6WvLPwvleCEV4Q&authuser=0` <-  # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
library(googlesheets4)
`https://docs.google.com/spreadsheets/d/1oB-5hj1pO5g8FMpZbA7RgIG8NvCRx6WvLPwvleCEV4Q/edit?usp=drive_open&ouid=100578388424897836434` <-  # 缺乏定義值
ss <- as_sheets_id(`https://docs.google.com/spreadsheets/d/1oB-5hj1pO5g8FMpZbA7RgIG8NvCRx6WvLPwvleCEV4Q/edit?usp=drive_open&ouid=100578388424897836434`)
homework_sheet <- sheets_read(ss,sheet=1)
num <- c(1.5, 2, 3)
int <- c(1L, 3L, -2L)
char <- c("1.5","2","3")
logi <- c(T,T,F)
typeof(num)
typeof(int)
typeof(char)
typeof(logi)
class(num)
class(int)
class(char)
class(logi)
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
majors10_factor <- factor(majors10_char)
# 或
majors10_factor <- factor(
c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
)
typeof(majors10_factor)
class(majors10_factor)
majors10_char
majors10_char
majors10_factor
as.integer(majors10_factor)
levels(majors10_factor)
stringInteger <- c("1","2","-11")
class(stringInteger) # 無法進行數值運算
stringInteger+2
char3 <- c("小明","1","3")
as.integer(char3)
studentId <- c(410773002, 410773015)
class(studentId)
type(studentId)
as.character(studentId)
class(studentId)
studentId<-as.character(studentId)
class(studentId)
library(lubridate)
browseURL("https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit#gid=458686645")
library(lubridate)
`小明交易1` <- list(
ymd_hms("2020-03-31T13:40:55Z"), # Date/Time class
"一芳", # character
2, # numeric
"水果茶" # character
)
print(`小明交易1`)
View(小明交易1)
View(小明交易1)
View(小明交易1)
View(小明交易1)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
View(小明108學年課表C)
小明108學年課表C[[1]]
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
View(小明108學年課表C)
View(小明108學年課表C)
小明108學年課表C[["108學年第2學期"]]
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
View(小明108學年課表C)
小明108學年課表C[["108學年第1學期"]]
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
View(小明108學年課表C)
authorValues <-
list( # 由c() 改list(), 元素命名
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw", time="2020-03-25T07:17:40Z"
)
committerValues <-
list( # 由c() 改list(), 元素命名
name="emilyluckey",
email="emily007@gmail.com", time="2020-03-26T08:18:40Z"
)
commit <- list(
author=authorValues,
commmitter=committerValues,
message="update"
)
View(commit)
print(commit)
library(lubridate)
authorValues <-
list(
name="Martin老師",
email="mtlin@gm.ntpu.edu.tw",
time=ymd_hms("2020-03-25T07:17:40Z")
)
committerValues <-
list(
name="emilyluckey",
email="emily007@gmail.com",
time=ymd_hms("2020-03-26T08:18:40Z")
)
commit <- list(
author=authorValues,
commmitter=committerValues,
message="update"
)
print(commit)
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(commit)
'天氣預報_2020-03-31<-list(city=台北市,highest temperature=25,lowest temperature=18),list(city=新北市,highest temperature=24,lowest temperature=15)
course1_1081<-list(name=個經,teacher=Alice,grade=85)course2_1081<-list(name=總經,teacher=Mark,grade=78)`108-1修課紀錄`<-list(course1_1081,course2_1081)course1_1082<-list(name=作業研究,teacher=Jason,grade=90)`108-2修課紀錄`<-list(course1_1082)
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(commit)
>
# 108-1
course1_1081 <-
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
course2_1081 <-
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
`108-1修課記錄` <-
list(
course1_1081,
course2_1081
)
# 108-2
course1_1082 <-
list(
name="作業研究",
teacher="Jason",
grade=90
)
`108-2修課記錄` <-
list(
course1_1082
)
# 整合兩學期
`每學期修課記錄` <- list(
`108-1`=`108-1修課記錄`,
`108-2`=`108-2修課記錄`
)
# 完成記錄
`小明的修課記錄` <-
list(
name="小明",
semesters=`每學期修課記錄`
)
# 108-1
course1_1081 <-
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
course2_1081 <-
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
`108-1修課記錄` <-
list(
course1_1081,
course2_1081
)
# 108-2
course1_1082 <-
list(
name="作業研究",
teacher="Jason",
grade=90
)
`108-2修課記錄` <-
list(
course1_1082
)
# 整合兩學期
`每學期修課記錄` <- list(
`108-1`=`108-1修課記錄`,
`108-2`=`108-2修課記錄`
)
# 完成記錄
`小明的修課記錄` <-
list(
name="小明",
semesters=`每學期修課記錄`
)
#108-1
course1_1081<-
list()
course1_1081<-
list( )
course1_1081<-
list(name=個經,)
course1_1081<-
list(
name=個經,
teacher=Alice,
grade=85
)
course1_1081<-
+ list(
+ name="個經",
+ teacher=Alice,
+ grade=85
+ )
# 108-1
course1_1081 <-
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
course2_1081 <-
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
`108-1修課記錄` <-
list(
course1_1081,
course2_1081
)
# 108-2
course1_1082 <-
list(
name="作業研究",
teacher="Jason",
grade=90
)
`108-2修課記錄` <-
list(
course1_1082
)
# 整合兩學期
`每學期修課記錄` <- list(
`108-1`=`108-1修課記錄`,
`108-2`=`108-2修課記錄`
)
# 完成記錄
`小明的修課記錄` <-
list(
name="小明",
semesters=`每學期修課記錄`
)
#108-1
course1_1081<-
list(
name="總經",
teacher=Alice,
grade=85
)
# 108-1
course1_1081 <-
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
course2_1081 <-
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
`108-1修課記錄` <-
list(
course1_1081,
course2_1081
)
# 108-2
course1_1082 <-
list(
name="作業研究",
teacher="Jason",
grade=90
)
`108-2修課記錄` <-
list(
course1_1082
)
# 整合兩學期
`每學期修課記錄` <- list(
`108-1`=`108-1修課記錄`,
`108-2`=`108-2修課記錄`
)
# 完成記錄
`小明的修課記錄` <-
list(
name="小明",
semesters=`每學期修課記錄`
)
#108-1
> course1_1081<-
+ list(
+ name="總經",
+ teacher=Alice,
+ grade=85
+ )
#108-1
> course1_1081<-
+ list(
+ name="總經",
+ teacher="Alice",
+ grade=85
+ )
#108-1
> course1_1081<-
list(
name="總經",
teacher="Alice",
grade=85
)
course2_1081<-
list(
name=總經,
teacher="Mark",
name="總經",
teacher="Mark",
grade=78
)
course2_1081<-
list(
name=總經,
)
course2_1081<-
list(
name="總經",
teacher="Mark",
grade=78
)
course2_1081<-
list(
name="總經",
teacher="Mark",
grade=78
)
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
# p=1.2的需求量
p=1.2
qd <- 10-5*p # 小心是5*p, 不能寫5p
# p=1.3的需求量
p=1.3
qd <- 10-5*p
# p=1.4的需求量
p=1.4
qd <- 10-5*p
demand <- # 創造一個物件叫demand
function(p){ # 定義這個物件為函數
q_d <- 10-5*p # 小心是5*p, 不能寫5p
}
# p=1.2的需求量
demand(1.2)
# p=1.3的需求量
demand(1.3)
# p=1.4的需求量
demand(1.4)
demand_return <-
function(p){
q_d <- 10-5*p
return(q_d)
}
# 印在螢幕，但Global Environment並不會有q_d
demand_return(1.2)
.Last.value
demand_return(1.2) # 相當於
4
demand_return(1.2) -> q_d1.2 # 相當於
4 -> q_d1.2
q_d <- 5
demand_return(p=1.2)
print(q_d)
demand_return(1.2) -> q_d1.2 # 相當於
4 -> q_d1.2
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather("臺中市",today())
askSilly_weather("花蓮縣",today())
class(demand_return)
# 查詢函數formals arguments要求
formals(askSilly_weather)
learning_topics <-
list(
subject="函數",
date=lubridate::ymd("2020-06-03"),
functionsCreated=list(
demand=demand_return # 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身。
)
)
typeof(demand_return)
# 查詢函數執行所要求環境
environment(demand_return)
# 若函數執行需要Global environment已存在某些物件，查詢需要哪些物件
codetools::findGlobals(demand_return)
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand)
# myDemand對Global environment的要求多了intercept及slope
environment(demand_return)
environment(myDemand)
intercept <- 10
slope <- -5
myDemand <- function(p){
q_d <- intercept + slope*p
return(q_d)
}
environment(demand_return)
environment(myDemand)
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand)
# myDemand對Global environment的要求多了intercept及slope
myDemand2 <- function(p, intercept=10, slope=-5){
q_d <- intercept + slope*p
return(q_d)
}
environment(myDemand2)
findGlobals(myDemand2) # 不依靠global env裡的intercept/slope
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand)
# myDemand對Global environment的要求多了intercept及slope
myDemand2 <- function(p, intercept=10, slope=-5){
q_d <- intercept + slope*p
return(q_d)
}
environment(myDemand2)
findGlobals(myDemand2) # 不依靠global env裡的intercept/slope
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
# 之後才執行以下程式
if(
str_detect(studentId,'[43](1[01][0-9]|9[0-9])[0-9]{5}',negate=T)
) {
warning("你所輸入的學號不正確")
}
# 先執行此行輸入學號
readline(prompt = "410773033") -> studentId
}
# 先執行此行輸入學號
readline(prompt = "410773033") -> studentId
}
if(
str_detect(studentId,'[43](1[01][0-9]|9[0-9])[0-9]{5}',negate=T)
) {
warning("你所輸入的學號不正確")
